{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCharData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"col"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/CharData","preciseIdentifier":"s:9SwiftTerm8CharDataV","text":"CharData"},{"kind":"text","text":"?"}],"languages":["swift"],"platforms":["iOS","macOS"]}]},{"kind":"parameters","parameters":[{"name":"col","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"column to retrieve, starts at 0"}]}]},{"name":"row","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"row to retrieve, starts at 0"}]}]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"nil if the col or row are out of bounds, or the CharData contained in that cell otherwise"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/terminal\/getchardata(col:row:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharData(col:row:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns the CharData at the specified column and row from the visible portion of the buffer, these are zero-based"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCharData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"col"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CharData","preciseIdentifier":"s:9SwiftTerm8CharDataV"},{"kind":"text","text":"?"}],"title":"getCharData(col:row:)","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"s:9SwiftTerm8TerminalC11getCharData3col3rowAA0eF0VSgSi_SitF","modules":[{"name":"SwiftTerm"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal"]]},"references":{"doc://SwiftTerm/documentation/SwiftTerm/Terminal":{"role":"symbol","title":"Terminal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" class provides the terminal emulation engine, and can be used to feed data to the"},{"type":"text","text":" "},{"type":"text","text":"terminal emulator.   Typically users will intereact with a higher-level implementation that provides a"},{"type":"text","text":" "},{"type":"text","text":"UI toolkit-specific rendering and connects the input to the UI toolkit."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Terminal"}],"url":"\/documentation\/swiftterm\/terminal"},"doc://SwiftTerm/documentation/SwiftTerm/CharData":{"role":"symbol","title":"CharData","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CharData"}],"abstract":[{"type":"text","text":"Stores a cell with both the character being displayed as well as the color attribute."},{"type":"text","text":" "},{"type":"text","text":"This uses an Int32 to store the value, if the value can not be encoded as a single Unicode.Scalar,"},{"type":"text","text":" "},{"type":"text","text":"then an index is stored that is looked up in parallel, so that full grapheme clusters can be tracked."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/CharData","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CharData"}],"url":"\/documentation\/swiftterm\/chardata"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getCharData(col:row:)":{"role":"symbol","title":"getCharData(col:row:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCharData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"col"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CharData","preciseIdentifier":"s:9SwiftTerm8CharDataV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the CharData at the specified column and row from the visible portion of the buffer, these are zero-based"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharData(col:row:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getchardata(col:row:)"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"}}}