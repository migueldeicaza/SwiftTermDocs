{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximizeWindow"}],"languages":["swift"],"platforms":["iOS","macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/terminal\/windowmanipulationcommand\/maximizewindow"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand\/maximizeWindow","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Attempt to maximize the window"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximizeWindow"}],"title":"Terminal.WindowManipulationCommand.maximizeWindow","roleHeading":"Case","role":"symbol","symbolKind":"case","externalID":"s:9SwiftTerm8TerminalC25WindowManipulationCommandO08maximizeD0yA2EmF","modules":[{"name":"SwiftTerm"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand"]]},"references":{"doc://SwiftTerm/documentation/SwiftTerm/Terminal/WindowManipulationCommand/maximizeWindow":{"role":"symbol","title":"Terminal.WindowManipulationCommand.maximizeWindow","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximizeWindow"}],"abstract":[{"type":"text","text":"Attempt to maximize the window"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand\/maximizeWindow","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/windowmanipulationcommand\/maximizewindow"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal":{"role":"symbol","title":"Terminal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" class provides the terminal emulation engine, and can be used to feed data to the"},{"type":"text","text":" "},{"type":"text","text":"terminal emulator.   Typically users will intereact with a higher-level implementation that provides a"},{"type":"text","text":" "},{"type":"text","text":"UI toolkit-specific rendering and connects the input to the UI toolkit."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Terminal"}],"url":"\/documentation\/swiftterm\/terminal"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/WindowManipulationCommand":{"role":"symbol","title":"Terminal.WindowManipulationCommand","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowManipulationCommand"}],"abstract":[{"type":"text","text":"Commands send to the "},{"type":"codeVoice","code":"windowCommand"},{"type":"text","text":" delegate for the front-end to implement capabilities"},{"type":"text","text":" "},{"type":"text","text":"on behalf of the client.  The expected return strings in some of these enumeration values is documented"},{"type":"text","text":" "},{"type":"text","text":"below.   Returns are only expected for the enum values that start with the prefix "},{"type":"codeVoice","code":"report"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowManipulationCommand"}],"url":"\/documentation\/swiftterm\/terminal\/windowmanipulationcommand"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"}}}