{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"languages":["swift"],"platforms":["iOS","macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A front-end would draw the contents of the terminal, and take input from the user, which is in turn"},{"type":"text","text":" "},{"type":"text","text":"either mapped to one of the public APIs here, or if it is user input is passed to the "},{"type":"codeVoice","code":"feed"},{"type":"text","text":"  methods here."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The terminal is also connected to a backend that is conneted to the client, and data from this"},{"type":"text","text":" "},{"type":"text","text":"client is fed into the emulator by calling the "},{"type":"codeVoice","code":"sendResponse method"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The behavior of the terminal is configured by implementing the "},{"type":"codeVoice","code":"TerminalDelegate"},{"type":"text","text":" protocol"},{"type":"text","text":" "},{"type":"text","text":"that is provided in the constructor call."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/terminal"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" class provides the terminal emulation engine, and can be used to feed data to the"},{"type":"text","text":" "},{"type":"text","text":"terminal emulator.   Typically users will intereact with a higher-level implementation that provides a"},{"type":"text","text":" "},{"type":"text","text":"UI toolkit-specific rendering and connects the input to the UI toolkit."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"title":"Terminal","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:9SwiftTerm8TerminalC","modules":[{"name":"SwiftTerm"}],"navigatorTitle":[{"kind":"identifier","text":"Terminal"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/init(delegate:options:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/applicationCursor","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/backgroundColor","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/bracketedPasteMode","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/buffer","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/cols","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/currentAttribute","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/cursorColor","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/foregroundColor","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hostCurrentDirectory","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hostCurrentDocument","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/mouseMode-swift.property","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/parser","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/rows","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/silentLog"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/changedLines()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/clearUpdateRange()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/emitLineFeed()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/encodeButton(button:release:shift:meta:control:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(buffer:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(byteArray:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(text:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/garbageCollectPayload()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getBufferAsData(kind:encoding:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharData(col:row:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharacter(col:row:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCursorLocation()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getDims()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getLine(row:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getScrollInvariantLine(row:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getScrollInvariantUpdateRange()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getText(start:end:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getTopVisibleRow()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getUpdateRange()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hideCursor()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/installPalette(colors:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/parse(buffer:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/refresh(startRow:endRow:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/registerOscHandler(code:handler:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/resetToInitialState()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/resize(cols:rows:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/scroll(isWrapped:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendEvent(buttonFlags:x:y:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendEvent(buttonFlags:x:y:pixelX:pixelY:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendMotion(buttonFlags:x:y:pixelX:pixelY:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendResponse(_:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendResponse(text:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setCursorStyle(_:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setIconTitle(text:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setTitle(text:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/showCursor()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/softReset()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/updateFullScreen()"]},{"title":"Type Methods","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getEnvironmentVariables(termName:trueColor:)"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/BufferKind","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/MouseMode-swift.enum","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand"]}],"references":{"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getScrollInvariantUpdateRange()":{"role":"symbol","title":"getScrollInvariantUpdateRange()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getScrollInvariantUpdateRange"},{"kind":"text","text":"() -> (startY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", endY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Returns the starting and ending lines that need to be redrawn, or nil"},{"type":"text","text":" "},{"type":"text","text":"if no part of the screen needs to be updated."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getScrollInvariantUpdateRange()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getscrollinvariantupdaterange()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/emitLineFeed()":{"role":"symbol","title":"emitLineFeed()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"emitLineFeed"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/emitLineFeed()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/emitlinefeed()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getUpdateRange()":{"role":"symbol","title":"getUpdateRange()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getUpdateRange"},{"kind":"text","text":"() -> (startY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", endY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")?"}],"abstract":[{"type":"text","text":"Returns the starting and ending lines that need to be redrawn, or nil"},{"type":"text","text":" "},{"type":"text","text":"if no part of the screen needs to be updated.   Alternatively, you can"},{"type":"text","text":" "},{"type":"text","text":"get a Set"},{"type":"text","text":" with the changed lines by calling "},{"type":"codeVoice","code":"changedLines()"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getUpdateRange()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getupdaterange()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/hostCurrentDocument":{"role":"symbol","title":"hostCurrentDocument","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hostCurrentDocument"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"This variable if set, contains an URI representing the host and current document of the process"},{"type":"text","text":" "},{"type":"text","text":"running in the terminal.   It might be nil, or might not be correct, the"},{"type":"text","text":" "},{"type":"text","text":"contents are entirely under the control of the remote application, and require the terminal to be trusted"},{"type":"text","text":" "},{"type":"text","text":"(see the "},{"type":"codeVoice","code":"isProcessTrusted"},{"type":"text","text":" method in the "},{"type":"codeVoice","code":"TerminalDelegate"},{"type":"text","text":").  When this is set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"hostCurrentDocumentUpdated"},{"type":"text","text":" method on the delegate is invoked."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hostCurrentDocument","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/hostcurrentdocument"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/sendResponse(text:)":{"role":"symbol","title":"sendResponse(text:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendResponse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sends the provided text to the connected backend"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendResponse(text:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/sendresponse(text:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/feed(text:)":{"role":"symbol","title":"feed(text:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"feed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Processes the provided byte-array coming from the host, interprets them and"},{"type":"text","text":" "},{"type":"text","text":"updates the screen state accordingly."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(text:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/feed(text:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getLine(row:)":{"role":"symbol","title":"getLine(row:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getLine"},{"kind":"text","text":"("},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BufferLine","preciseIdentifier":"s:9SwiftTerm10BufferLineC"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the contents of a line as a BufferLine, or nil if the requested line is out of range"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getLine(row:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getline(row:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/resetToInitialState()":{"role":"symbol","title":"resetToInitialState()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resetToInitialState"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"This performs a full reset of the terminal, like a soft reset, but additionally resets the buffer conents and scroll area."},{"type":"text","text":" "},{"type":"text","text":"for a soft reset see "},{"type":"codeVoice","code":"softReset"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/resetToInitialState()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/resettoinitialstate()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/feed(buffer:)":{"role":"symbol","title":"feed(buffer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"feed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Processes the provided byte-array coming from the host, interprets them and"},{"type":"text","text":" "},{"type":"text","text":"updates the screen state accordingly."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(buffer:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/feed(buffer:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/foregroundColor":{"role":"symbol","title":"foregroundColor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"foregroundColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:9SwiftTerm5ColorC"}],"abstract":[{"type":"text","text":"This tracks the current foreground color for the application."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/foregroundColor","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/foregroundcolor"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/cursorColor":{"role":"symbol","title":"cursorColor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cursorColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:9SwiftTerm5ColorC"},{"kind":"text","text":"?"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/cursorColor","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/cursorcolor"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/garbageCollectPayload()":{"role":"symbol","title":"garbageCollectPayload()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"garbageCollectPayload"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Check for payload identifiers that are not in use and stop retaining their payload,"},{"type":"text","text":" "},{"type":"text","text":"to avoid accumulting memory for images and URLs that are no longer visible or"},{"type":"text","text":" "},{"type":"text","text":"available by scrolling."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/garbageCollectPayload()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/garbagecollectpayload()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/mouseMode-swift.property":{"role":"symbol","title":"mouseMode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"MouseMode","preciseIdentifier":"s:9SwiftTerm8TerminalC9MouseModeO"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/mouseMode-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/mousemode-swift.property"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/init(delegate:options:)":{"role":"symbol","title":"init(delegate:options:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"delegate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TerminalDelegate","preciseIdentifier":"s:9SwiftTerm16TerminalDelegateP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TerminalOptions","preciseIdentifier":"s:9SwiftTerm15TerminalOptionsV"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/init(delegate:options:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/init(delegate:options:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/updateFullScreen()":{"role":"symbol","title":"updateFullScreen()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateFullScreen"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/updateFullScreen()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/updatefullscreen()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/setCursorStyle(_:)":{"role":"symbol","title":"setCursorStyle(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setCursorStyle"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CursorStyle","preciseIdentifier":"s:9SwiftTerm11CursorStyleO"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setCursorStyle(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/setcursorstyle(_:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/hideCursor()":{"role":"symbol","title":"hideCursor()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hideCursor"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hideCursor()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/hidecursor()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getScrollInvariantLine(row:)":{"role":"symbol","title":"getScrollInvariantLine(row:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getScrollInvariantLine"},{"kind":"text","text":"("},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"BufferLine","preciseIdentifier":"s:9SwiftTerm10BufferLineC"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the contents of a line as a BufferLine counting from the begging of the scroll buffer."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getScrollInvariantLine(row:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getscrollinvariantline(row:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/setIconTitle(text:)":{"role":"symbol","title":"setIconTitle(text:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIconTitle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setIconTitle(text:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/seticontitle(text:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/encodeButton(button:release:shift:meta:control:)":{"role":"symbol","title":"encodeButton(button:release:shift:meta:control:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encodeButton"},{"kind":"text","text":"("},{"kind":"externalParam","text":"button"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"release"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shift"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"meta"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"control"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Encodes the button action in the format expected by the client"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/encodeButton(button:release:shift:meta:control:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/encodebutton(button:release:shift:meta:control:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/hostCurrentDirectory":{"role":"symbol","title":"hostCurrentDirectory","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hostCurrentDirectory"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"This variable if set, contains an URI representing the host and directory of the process running in the terminal"},{"type":"text","text":" "},{"type":"text","text":"it is often used by applciations to track the working directory.   It might be nil, or might not be correct, the"},{"type":"text","text":" "},{"type":"text","text":"contents are entirely under the control of the remote application, and require the terminal to be trusted"},{"type":"text","text":" "},{"type":"text","text":"(see the "},{"type":"codeVoice","code":"isProcessTrusted"},{"type":"text","text":" method in the "},{"type":"codeVoice","code":"TerminalDelegate"},{"type":"text","text":").  When this is set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"hostCurrentDirectoryUpdated"},{"type":"text","text":" method on the delegate is invoked."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/hostCurrentDirectory","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/hostcurrentdirectory"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/setTitle(text:)":{"role":"symbol","title":"setTitle(text:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setTitle"},{"kind":"text","text":"("},{"kind":"externalParam","text":"text"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/setTitle(text:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/settitle(text:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/softReset()":{"role":"symbol","title":"softReset()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"softReset"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Performs a terminal soft-reset, the equivalent of the DECSTR sequence"},{"type":"text","text":" "},{"type":"text","text":"For a full reset see "},{"type":"codeVoice","code":"resetToInitialState"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/softReset()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/softreset()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getTopVisibleRow()":{"role":"symbol","title":"getTopVisibleRow()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTopVisibleRow"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the uppermost visible row on the terminal buffer"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getTopVisibleRow()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/gettopvisiblerow()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getBufferAsData(kind:encoding:)":{"role":"symbol","title":"getBufferAsData(kind:encoding:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBufferAsData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"kind"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"BufferKind","preciseIdentifier":"s:9SwiftTerm8TerminalC10BufferKindO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"encoding"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Encoding","preciseIdentifier":"s:SS10FoundationE8EncodingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"abstract":[{"type":"text","text":"Returns the contents of the specified terminal buffer encoded as UTF8 in the provided Data buffer"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getBufferAsData(kind:encoding:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getbufferasdata(kind:encoding:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/backgroundColor":{"role":"symbol","title":"backgroundColor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"backgroundColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:9SwiftTerm5ColorC"}],"abstract":[{"type":"text","text":"This tracks the current background color for the application."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/backgroundColor","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/backgroundcolor"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/showCursor()":{"role":"symbol","title":"showCursor()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"showCursor"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/showCursor()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/showcursor()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/sendEvent(buttonFlags:x:y:pixelX:pixelY:)":{"role":"symbol","title":"sendEvent(buttonFlags:x:y:pixelX:pixelY:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buttonFlags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pixelX"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pixelY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sends a mouse event for a specific button at the specific location"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendEvent(buttonFlags:x:y:pixelX:pixelY:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/sendevent(buttonflags:x:y:pixelx:pixely:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getCharData(col:row:)":{"role":"symbol","title":"getCharData(col:row:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCharData"},{"kind":"text","text":"("},{"kind":"externalParam","text":"col"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"CharData","preciseIdentifier":"s:9SwiftTerm8CharDataV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the CharData at the specified column and row from the visible portion of the buffer, these are zero-based"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharData(col:row:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getchardata(col:row:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/MouseMode-swift.enum":{"role":"symbol","title":"Terminal.MouseMode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"MouseMode"}],"abstract":[{"type":"text","text":"Represents the mouse operation mode that the terminal is currently using and higher level"},{"type":"text","text":" "},{"type":"text","text":"implementations should use the functions in this enumeration to determine what events to"},{"type":"text","text":" "},{"type":"text","text":"send"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/MouseMode-swift.enum","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MouseMode"}],"url":"\/documentation\/swiftterm\/terminal\/mousemode-swift.enum"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/installPalette(colors:)":{"role":"symbol","title":"installPalette(colors:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"installPalette"},{"kind":"text","text":"("},{"kind":"externalParam","text":"colors"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Color","preciseIdentifier":"s:9SwiftTerm5ColorC"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Installs the new colors as the default colors and recomputes the"},{"type":"text","text":" "},{"type":"text","text":"current and ansi palette.   This will not change the UI layer, for that it is better"},{"type":"text","text":" "},{"type":"text","text":"to call the "},{"type":"codeVoice","code":"installColors"},{"type":"text","text":" method on "},{"type":"codeVoice","code":"TerminalView"},{"type":"text","text":", which will"},{"type":"text","text":" "},{"type":"text","text":"both call this method, and update the display appropriately."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/installPalette(colors:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/installpalette(colors:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/resize(cols:rows:)":{"role":"symbol","title":"resize(cols:rows:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cols"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"rows"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/resize(cols:rows:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/resize(cols:rows:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getText(start:end:)":{"role":"symbol","title":"getText(start:end:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getText"},{"kind":"text","text":"("},{"kind":"externalParam","text":"start"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:9SwiftTerm8PositionV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"end"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Position","preciseIdentifier":"s:9SwiftTerm8PositionV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"abstract":[{"type":"text","text":"Returns the text between the specified range"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getText(start:end:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/gettext(start:end:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/feed(byteArray:)":{"role":"symbol","title":"feed(byteArray:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"feed"},{"kind":"text","text":"("},{"kind":"externalParam","text":"byteArray"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Processes the provided byte-array coming from the host, interprets them and"},{"type":"text","text":" "},{"type":"text","text":"updates the screen state accordingly."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/feed(byteArray:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/feed(bytearray:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/registerOscHandler(code:handler:)":{"role":"symbol","title":"registerOscHandler(code:handler:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"registerOscHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"code"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"handler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">) -> ())"}],"abstract":[{"type":"text","text":"This allows users of the terminal to register a handler for an OSC code."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/registerOscHandler(code:handler:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/registeroschandler(code:handler:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/sendMotion(buttonFlags:x:y:pixelX:pixelY:)":{"role":"symbol","title":"sendMotion(buttonFlags:x:y:pixelX:pixelY:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendMotion"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buttonFlags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pixelX"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"pixelY"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Sends a mouse motion event for a specific button at the specific location"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendMotion(buttonFlags:x:y:pixelX:pixelY:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/sendmotion(buttonflags:x:y:pixelx:pixely:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/WindowManipulationCommand":{"role":"symbol","title":"Terminal.WindowManipulationCommand","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowManipulationCommand"}],"abstract":[{"type":"text","text":"Commands send to the "},{"type":"codeVoice","code":"windowCommand"},{"type":"text","text":" delegate for the front-end to implement capabilities"},{"type":"text","text":" "},{"type":"text","text":"on behalf of the client.  The expected return strings in some of these enumeration values is documented"},{"type":"text","text":" "},{"type":"text","text":"below.   Returns are only expected for the enum values that start with the prefix "},{"type":"codeVoice","code":"report"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/WindowManipulationCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowManipulationCommand"}],"url":"\/documentation\/swiftterm\/terminal\/windowmanipulationcommand"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/silentLog":{"role":"symbol","title":"silentLog","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"silentLog"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/silentLog","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/silentlog"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/currentAttribute":{"role":"symbol","title":"currentAttribute","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"currentAttribute"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Attribute","preciseIdentifier":"s:9SwiftTerm9AttributeV"}],"abstract":[{"type":"text","text":"The current attribute used by the terminal by default"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/currentAttribute","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/currentattribute"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal":{"role":"symbol","title":"Terminal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" class provides the terminal emulation engine, and can be used to feed data to the"},{"type":"text","text":" "},{"type":"text","text":"terminal emulator.   Typically users will intereact with a higher-level implementation that provides a"},{"type":"text","text":" "},{"type":"text","text":"UI toolkit-specific rendering and connects the input to the UI toolkit."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Terminal"}],"url":"\/documentation\/swiftterm\/terminal"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/cols":{"role":"symbol","title":"cols","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"cols"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The current terminal columns (counting from 1)"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/cols","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/cols"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/parser":{"role":"symbol","title":"parser","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"parser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EscapeSequenceParser","preciseIdentifier":"s:9SwiftTerm20EscapeSequenceParserC"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/parser","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/parser"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/applicationCursor":{"role":"symbol","title":"applicationCursor","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"applicationCursor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/applicationCursor","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/applicationcursor"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/parse(buffer:)":{"role":"symbol","title":"parse(buffer:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Processes the provided byte-array coming from the host, interprets them and"},{"type":"text","text":" "},{"type":"text","text":"updates the screen state accordingly."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/parse(buffer:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/parse(buffer:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/sendResponse(_:)":{"role":"symbol","title":"sendResponse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendResponse"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Sends the provided text to the connected backend, takes a variable list of arguments"},{"type":"text","text":" "},{"type":"text","text":"that could be either [UInt8], Strings, or a single UInt8 value."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendResponse(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/sendresponse(_:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getEnvironmentVariables(termName:trueColor:)":{"role":"symbol","title":"getEnvironmentVariables(termName:trueColor:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getEnvironmentVariables"},{"kind":"text","text":"("},{"kind":"externalParam","text":"termName"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"trueColor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Provides a baseline set of environment variables that would be useful to run the terminal,"},{"type":"text","text":" "},{"type":"text","text":"you can customzie these accordingly."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getEnvironmentVariables(termName:trueColor:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getenvironmentvariables(termname:truecolor:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getCursorLocation()":{"role":"symbol","title":"getCursorLocation()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCursorLocation"},{"kind":"text","text":"() -> (x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Zero-based (row, column) of cursor location relative to visible part of display."},{"type":"text","text":" "},{"type":"text","text":"Returns: a tuple, where the first element contains the column (x) and the second the row (y) where the cursor is."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCursorLocation()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getcursorlocation()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getDims()":{"role":"symbol","title":"getDims()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getDims"},{"kind":"text","text":"() -> (cols"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", rows"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Returns the terminal dimensions 1-based values"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getDims()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getdims()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/getCharacter(col:row:)":{"role":"symbol","title":"getCharacter(col:row:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getCharacter"},{"kind":"text","text":"("},{"kind":"externalParam","text":"col"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"row"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Character","preciseIdentifier":"s:SJ"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Returns the character at the specified column and row, these are zero-based"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/getCharacter(col:row:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/getcharacter(col:row:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/rows":{"role":"symbol","title":"rows","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"rows"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"The current terminal rows (counting from 1)"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/rows","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/rows"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/refresh(startRow:endRow:)":{"role":"symbol","title":"refresh(startRow:endRow:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"refresh"},{"kind":"text","text":"("},{"kind":"externalParam","text":"startRow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"endRow"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Registers that the region between startRow and endRow was modified and needs to be updated by the"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/refresh(startRow:endRow:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/refresh(startrow:endrow:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/BufferKind":{"role":"symbol","title":"Terminal.BufferKind","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"BufferKind"}],"abstract":[{"type":"text","text":"Specified the kind of buffer is being requested from the terminal"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/BufferKind","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BufferKind"}],"url":"\/documentation\/swiftterm\/terminal\/bufferkind"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/buffer":{"role":"symbol","title":"buffer","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"buffer"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Buffer","preciseIdentifier":"s:9SwiftTerm6BufferC"}],"abstract":[{"type":"text","text":"Returns the active buffer (either the normal buffer or the alternative buffer)"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/buffer","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/buffer"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/bracketedPasteMode":{"role":"symbol","title":"bracketedPasteMode","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"bracketedPasteMode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Indicates that the application has toggled bracketed paste mode, which means that when content is pasted into"},{"type":"text","text":" "},{"type":"text","text":"the terminal, the content will be wrapped in “ESC [ 200 ~“ to start, and “ESC [ 201 ~“ to end."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/bracketedPasteMode","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/bracketedpastemode"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/clearUpdateRange()":{"role":"symbol","title":"clearUpdateRange()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearUpdateRange"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Clears the state of the pending display redraw region as well as the dirtyLines set."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/clearUpdateRange()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/clearupdaterange()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/sendEvent(buttonFlags:x:y:)":{"role":"symbol","title":"sendEvent(buttonFlags:x:y:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sendEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"buttonFlags"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"x"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"y"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/sendEvent(buttonFlags:x:y:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/sendevent(buttonflags:x:y:)"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/changedLines()":{"role":"symbol","title":"changedLines()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"changedLines"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Set","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Returns a set containing the lines that have been modified, the"},{"type":"text","text":" "},{"type":"text","text":"returned set is not sorted."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/changedLines()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/changedlines()"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal/scroll(isWrapped:)":{"role":"symbol","title":"scroll(isWrapped:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scroll"},{"kind":"text","text":"("},{"kind":"externalParam","text":"isWrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal\/scroll(isWrapped:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminal\/scroll(iswrapped:)"}}}