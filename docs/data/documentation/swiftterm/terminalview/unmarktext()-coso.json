{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unmarkText"},{"kind":"text","text":"()"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/terminalview\/unmarktext()-coso"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView\/unmarkText()-coso","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"NSTextInputClient.unmarkText()"},{"type":"text","text":"."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unmarkText"},{"kind":"text","text":"()"}],"title":"unmarkText()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","externalID":"c:@M@SwiftTerm@objc(cs)TerminalView(im)unmarkText","modules":[{"name":"SwiftTerm"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView"]]},"references":{"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"},"doc://SwiftTerm/documentation/SwiftTerm/TerminalView/unmarkText()-coso":{"role":"symbol","title":"unmarkText()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unmarkText"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView\/unmarkText()-coso","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/terminalview\/unmarktext()-coso"},"doc://SwiftTerm/documentation/SwiftTerm/TerminalView":{"role":"symbol","title":"TerminalView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TerminalView"}],"abstract":[{"type":"text","text":"TerminalView provides an AppKit front-end to the "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" termininal emulator."},{"type":"text","text":" "},{"type":"text","text":"It is up to a subclass to either wire the terminal emulator to a remote terminal"},{"type":"text","text":" "},{"type":"text","text":"via some socket, to an application that wants to run with terminal emulation, or"},{"type":"text","text":" "},{"type":"text","text":"wiring this up to a pseudo-terminal."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TerminalView"}],"url":"\/documentation\/swiftterm\/terminalview"}}}