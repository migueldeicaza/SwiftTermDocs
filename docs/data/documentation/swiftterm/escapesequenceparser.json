{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EscapeSequenceParser"}],"languages":["swift"],"platforms":["iOS","macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is used by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal"},{"type":"text","text":" to interpret the sequence of bytes coming, and"},{"type":"text","text":" "},{"type":"text","text":"it is possible for users to hook up Operating System Command handlers (OSC -"},{"type":"text","text":" "},{"type":"text","text":"they begin with the two byte sequence ESC and ]).   These are typically used"},{"type":"text","text":" "},{"type":"text","text":"to implement custom communication channels."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/escapesequenceparser"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The engine that drives the parsing of the data stream for the terminal."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EscapeSequenceParser"}],"title":"EscapeSequenceParser","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:9SwiftTerm20EscapeSequenceParserC","modules":[{"name":"SwiftTerm"}],"navigatorTitle":[{"kind":"identifier","text":"EscapeSequenceParser"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm"]]},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/oscHandlers"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/OscHandler","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/OscHandlerFallback"]}],"references":{"doc://SwiftTerm/documentation/SwiftTerm/EscapeSequenceParser/OscHandlerFallback":{"role":"symbol","title":"EscapeSequenceParser.OscHandlerFallback","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OscHandlerFallback"}],"abstract":[{"type":"text","text":"If no OSC handler is found, this is the signature of a fallback method that will"},{"type":"text","text":" "},{"type":"text","text":"receive both the OSC code as the first parameter, along with a byte array containing"},{"type":"text","text":" "},{"type":"text","text":"the payload for the OSC message."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/OscHandlerFallback","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OscHandlerFallback"}],"url":"\/documentation\/swiftterm\/escapesequenceparser\/oschandlerfallback"},"doc://SwiftTerm/documentation/SwiftTerm/EscapeSequenceParser/OscHandler":{"role":"symbol","title":"EscapeSequenceParser.OscHandler","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OscHandler"}],"abstract":[{"type":"text","text":"Signature for an OSC handler, it will receive the byte array containing the data to this OSC sequence"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/OscHandler","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"OscHandler"}],"url":"\/documentation\/swiftterm\/escapesequenceparser\/oschandler"},"doc://SwiftTerm/documentation/SwiftTerm/Terminal":{"role":"symbol","title":"Terminal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Terminal"}],"abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" class provides the terminal emulation engine, and can be used to feed data to the"},{"type":"text","text":" "},{"type":"text","text":"terminal emulator.   Typically users will intereact with a higher-level implementation that provides a"},{"type":"text","text":" "},{"type":"text","text":"UI toolkit-specific rendering and connects the input to the UI toolkit."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/Terminal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Terminal"}],"url":"\/documentation\/swiftterm\/terminal"},"doc://SwiftTerm/documentation/SwiftTerm/EscapeSequenceParser":{"role":"symbol","title":"EscapeSequenceParser","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EscapeSequenceParser"}],"abstract":[{"type":"text","text":"The engine that drives the parsing of the data stream for the terminal."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"EscapeSequenceParser"}],"url":"\/documentation\/swiftterm\/escapesequenceparser"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"},"doc://SwiftTerm/documentation/SwiftTerm/EscapeSequenceParser/oscHandlers":{"role":"symbol","title":"oscHandlers","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"oscHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"OscHandler","preciseIdentifier":"s:9SwiftTerm20EscapeSequenceParserC10OscHandlera"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"Maps an integer code to a handler that will be invoked when this value is"},{"type":"text","text":" "},{"type":"text","text":"found.   For example, to set a handler for the OSC 123, you would do:"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/EscapeSequenceParser\/oscHandlers","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/escapesequenceparser\/oschandlers"}}}