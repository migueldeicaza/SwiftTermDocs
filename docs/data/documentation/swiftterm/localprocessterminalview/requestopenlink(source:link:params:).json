{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestOpenLink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView","preciseIdentifier":"c:@M@SwiftTerm@objc(cs)TerminalView","text":"TerminalView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"link"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"params"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"source","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the terminalview that called this method"}]}]},{"name":"link","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the string that was encoded as a link by the client application, typically a url,"},{"type":"text","text":" "},{"type":"text","text":"but could be anything, and could be used to communicate by the embedded application and the host"}]}]},{"name":"params","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the specification allows for key\/value pairs to be provided, this contains the"},{"type":"text","text":" "},{"type":"text","text":"key and value pairs that were provided"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/localprocessterminalview\/requestopenlink(source:link:params:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView\/requestOpenLink(source:link:params:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Invoked in response to the user clicking on a link, which is most likely a url, but is not"},{"type":"text","text":" "},{"type":"text","text":"mandatory, so custom implementations receive a string, and they can act on this as a way"},{"type":"text","text":" "},{"type":"text","text":"of communciating with the host if desired.   The default implementation calls NSWorkspace.shared.open()"},{"type":"text","text":" "},{"type":"text","text":"on the URL."}],"kind":"symbol","metadata":{"role":"symbol","title":"requestOpenLink(source:link:params:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestOpenLink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TerminalView","preciseIdentifier":"c:@M@SwiftTerm@objc(cs)TerminalView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"link"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"params"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"symbolKind":"method","externalID":"s:9SwiftTerm20TerminalViewDelegatePAAE15requestOpenLink6source4link6paramsyAA0cD0C_SSSDyS2SGtF::SYNTHESIZED::c:@M@SwiftTerm@objc(cs)LocalProcessTerminalView","extendedModule":"SwiftTerm","modules":[{"name":"SwiftTerm"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView\/TerminalViewDelegate-Implementations"]]},"references":{"doc://SwiftTerm/documentation/SwiftTerm/LocalProcessTerminalView/requestOpenLink(source:link:params:)":{"role":"symbol","title":"requestOpenLink(source:link:params:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestOpenLink"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TerminalView","preciseIdentifier":"c:@M@SwiftTerm@objc(cs)TerminalView"},{"kind":"text","text":", "},{"kind":"externalParam","text":"link"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"params"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"Invoked in response to the user clicking on a link, which is most likely a url, but is not"},{"type":"text","text":" "},{"type":"text","text":"mandatory, so custom implementations receive a string, and they can act on this as a way"},{"type":"text","text":" "},{"type":"text","text":"of communciating with the host if desired.   The default implementation calls NSWorkspace.shared.open()"},{"type":"text","text":" "},{"type":"text","text":"on the URL."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView\/requestOpenLink(source:link:params:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/localprocessterminalview\/requestopenlink(source:link:params:)"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"},"doc://SwiftTerm/documentation/SwiftTerm/LocalProcessTerminalView/TerminalViewDelegate-Implementations":{"role":"collectionGroup","title":"TerminalViewDelegate Implementations","abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView\/TerminalViewDelegate-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftterm\/localprocessterminalview\/terminalviewdelegate-implementations"},"doc://SwiftTerm/documentation/SwiftTerm/LocalProcessTerminalView":{"role":"symbol","title":"LocalProcessTerminalView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalProcessTerminalView"}],"abstract":[{"type":"codeVoice","code":"LocalProcessTerminalView"},{"type":"text","text":" is an AppKit NSView that can be used to host a local process"},{"type":"text","text":" "},{"type":"text","text":"the process is launched inside a pseudo-terminal."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessTerminalView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocalProcessTerminalView"}],"url":"\/documentation\/swiftterm\/localprocessterminalview"},"doc://SwiftTerm/documentation/SwiftTerm/TerminalView":{"role":"symbol","title":"TerminalView","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TerminalView"}],"abstract":[{"type":"text","text":"TerminalView provides an AppKit front-end to the "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" termininal emulator."},{"type":"text","text":" "},{"type":"text","text":"It is up to a subclass to either wire the terminal emulator to a remote terminal"},{"type":"text","text":" "},{"type":"text","text":"via some socket, to an application that wants to run with terminal emulation, or"},{"type":"text","text":" "},{"type":"text","text":"wiring this up to a pseudo-terminal."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalView","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TerminalView"}],"url":"\/documentation\/swiftterm\/terminalview"}}}