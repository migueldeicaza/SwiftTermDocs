{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeadlessTerminal"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftterm\/headlessterminal"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessDelegate","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalDelegate"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HeadlessTerminal"},{"type":"text","text":" provides a terminal emulator that runs a local process, but the output does not go"},{"type":"text","text":" "},{"type":"text","text":"anywhere.   You can use this to script applications and screen scrape the output for example, by accessing the"},{"type":"text","text":" "},{"type":"codeVoice","code":"terminal"},{"type":"text","text":" from this class."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeadlessTerminal"}],"title":"HeadlessTerminal","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:9SwiftTerm16HeadlessTerminalC","modules":[{"name":"SwiftTerm"}],"navigatorTitle":[{"kind":"identifier","text":"HeadlessTerminal"}]},"hierarchy":{"paths":[["doc:\/\/SwiftTerm\/documentation\/SwiftTerm"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/init(queue:options:onEnd:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/images","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/terminal"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/colorChanged(source:idx:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/createImageFromBitmap(source:bytes:width:height:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/dataReceived(slice:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/getWindowSize()","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/hostCurrentDirectoryUpdated(source:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/mouseModeChanged(source:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/processTerminated(_:exitCode:)","doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/send(source:data:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/TerminalDelegate-Implementations"],"generated":true}],"references":{"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/getWindowSize()":{"role":"symbol","title":"getWindowSize()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getWindowSize"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"winsize","preciseIdentifier":"c:@S@winsize"}],"abstract":[{"type":"text","text":"This method should return the window size to report to the local process."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/getWindowSize()","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/getwindowsize()"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/hostCurrentDirectoryUpdated(source:)":{"role":"symbol","title":"hostCurrentDirectoryUpdated(source:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hostCurrentDirectoryUpdated"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This method is invoked when the client application has issued a command to report"},{"type":"text","text":" "},{"type":"text","text":"its current working directory (this is done with the OSC 7 command).   The value can be"},{"type":"text","text":" "},{"type":"text","text":"read by accessing the "},{"type":"codeVoice","code":"hostCurrentDirectory"},{"type":"text","text":" property."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/hostCurrentDirectoryUpdated(source:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/hostcurrentdirectoryupdated(source:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/dataReceived(slice:)":{"role":"symbol","title":"dataReceived(slice:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dataReceived"},{"kind":"text","text":"("},{"kind":"externalParam","text":"slice"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"This method is invoked when data has been received from the local process that should be send to the terminal for processing."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/dataReceived(slice:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/datareceived(slice:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/terminal":{"role":"symbol","title":"terminal","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"terminal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":"!"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/terminal","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/terminal"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal":{"role":"symbol","title":"HeadlessTerminal","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HeadlessTerminal"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"HeadlessTerminal"},{"type":"text","text":" provides a terminal emulator that runs a local process, but the output does not go"},{"type":"text","text":" "},{"type":"text","text":"anywhere.   You can use this to script applications and screen scrape the output for example, by accessing the"},{"type":"text","text":" "},{"type":"codeVoice","code":"terminal"},{"type":"text","text":" from this class."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"HeadlessTerminal"}],"url":"\/documentation\/swiftterm\/headlessterminal"},"doc://SwiftTerm/documentation/SwiftTerm/LocalProcessDelegate":{"role":"symbol","title":"LocalProcessDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalProcessDelegate"}],"abstract":[{"type":"text","text":"Delegate that is invoked by the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcess"},{"type":"text","text":" class in response to various"},{"type":"text","text":" "},{"type":"text","text":"process-related events."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcessDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocalProcessDelegate"}],"url":"\/documentation\/swiftterm\/localprocessdelegate"},"doc://SwiftTerm/documentation/SwiftTerm":{"role":"collection","title":"SwiftTerm","abstract":[{"type":"text","text":"SwiftTerm is a VT100\/Xterm terminal emulator library for Swift applications that"},{"type":"text","text":" "},{"type":"text","text":"can be embedded into macOS, iOS applications, text-based, headless applications"},{"type":"text","text":" "},{"type":"text","text":"or other custom scenarios."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/TerminalDelegate-Implementations":{"role":"collectionGroup","title":"TerminalDelegate Implementations","abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/TerminalDelegate-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/terminaldelegate-implementations"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/createImageFromBitmap(source:bytes:width:height:)":{"role":"symbol","title":"createImageFromBitmap(source:bytes:width:height:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createImageFromBitmap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"width"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"height"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Invoked to create an image from an RGBA buffer at the current cursor position"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/createImageFromBitmap(source:bytes:width:height:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/createimagefrombitmap(source:bytes:width:height:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/images":{"role":"symbol","title":"images","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"images"},{"kind":"text","text":": [(["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")]"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/images","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/images"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/init(queue:options:onEnd:)":{"role":"symbol","title":"init(queue:options:onEnd:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"c:objc(cs)OS_dispatch_queue"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TerminalOptions","preciseIdentifier":"s:9SwiftTerm15TerminalOptionsV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"onEnd"},{"kind":"text","text":": ("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"exitCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":"?) -> ())"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/init(queue:options:onEnd:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/init(queue:options:onend:)"},"doc://SwiftTerm/documentation/SwiftTerm/TerminalDelegate":{"role":"symbol","title":"TerminalDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TerminalDelegate"}],"abstract":[{"type":"text","text":"The terminal delegate is a protocol that must be implemented by a class"},{"type":"text","text":" "},{"type":"text","text":"that would provide a user interface for the terminal, and it is used by the"},{"type":"text","text":" "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" to notify of important changes on the underlying terminal"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/TerminalDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"TerminalDelegate"}],"url":"\/documentation\/swiftterm\/terminaldelegate"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/colorChanged(source:idx:)":{"role":"symbol","title":"colorChanged(source:idx:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"colorChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"idx"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/colorChanged(source:idx:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/colorchanged(source:idx:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/send(source:data:)":{"role":"symbol","title":"send(source:data:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"send"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"Sends the byte data to the client connected to the terminal (in terminal emulation"},{"type":"text","text":" "},{"type":"text","text":"documentation, this is the “host”)"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/send(source:data:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/send(source:data:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/mouseModeChanged(source:)":{"role":"symbol","title":"mouseModeChanged(source:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"mouseModeChanged"},{"kind":"text","text":"("},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Terminal","preciseIdentifier":"s:9SwiftTerm8TerminalC"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"This method is invoked when the "},{"type":"codeVoice","code":"mouseMode"},{"type":"text","text":" property has changed, and gives the UI"},{"type":"text","text":" "},{"type":"text","text":"a chance to update any tracking capabilities that are required in the toolkit or no longer"},{"type":"text","text":" "},{"type":"text","text":"required to provide the events."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/mouseModeChanged(source:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/mousemodechanged(source:)"},"doc://SwiftTerm/documentation/SwiftTerm/HeadlessTerminal/processTerminated(_:exitCode:)":{"role":"symbol","title":"processTerminated(_:exitCode:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"processTerminated"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"LocalProcess","preciseIdentifier":"s:9SwiftTerm12LocalProcessC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"exitCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int32","preciseIdentifier":"s:s5Int32V"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"This method is invoked on the delegate when the process has exited"}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/HeadlessTerminal\/processTerminated(_:exitCode:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftterm\/headlessterminal\/processterminated(_:exitcode:)"},"doc://SwiftTerm/documentation/SwiftTerm/LocalProcess":{"role":"symbol","title":"LocalProcess","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LocalProcess"}],"abstract":[{"type":"text","text":"This class provides the capabilities to launch a local Unix process, and connect it to a "},{"type":"codeVoice","code":"Terminal"},{"type":"text","text":" "},{"type":"text","text":"class or subclass."}],"identifier":"doc:\/\/SwiftTerm\/documentation\/SwiftTerm\/LocalProcess","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LocalProcess"}],"url":"\/documentation\/swiftterm\/localprocess"}}}